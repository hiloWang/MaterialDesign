apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.hilo"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    // value2 错误: 设置如下俩个
    defaultConfig {
        multiDexEnabled true
        minSdkVersion 14
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INFTICE.txt'
    }

    // 签名： 对应buildTypes配置
  /*  signingConfigs {
        release {
            storeFile file("sapkey")
            storePassword "sap2015"
            keyAlias "sap360"
            keyPassword "sap2015"
        }
    }*/

    buildTypes {

        debug {
            // 显示Log
            buildConfigField "boolean", "hilo", "true"
//            signingConfig signingConfigs.release
        }

        release {
            applicationIdSuffix '.release'
            // 不显示Log
            buildConfigField "boolean", "hilo", "true"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true
            //加载默认混淆配置文件 progudard-android.txt在sdk目录里面，不用管，proguard.cfg是我们自己配<span></span>的混淆文件
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            //默认混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
//            signingConfig signingConfigs.release
        }

        /**
         * 多版本打包
         */
        // 版本1
        hiloApp {
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名
//            signingConfig signingConfigs.release
        }

        // 版本2
        hiloTestApp {
            //要修改applicationId可以通过配置buildTypes中的applicationIdSuffix属性，起作用是将applicationId设置为package加上你所配置的后缀
            applicationIdSuffix ".hiloTestApp"
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        a_flavors_hiloApp {
            // manifest动态配置属性，例如：高德id，个推id。只需在manifest动态属性处添加${//..这里配置的前缀即可，如map_value}
            manifestPlaceholders = [
                package_name : "com.hilo",
                map_value    : ""
            ]

            // 这里的参数是为了在 java 代码中使用，具体的使用方式为：context.getResources().getString(R.string.logcat);
            //Sinya -用来规定是否打印log，只需要修改 true 或者false即可
            resValue("string", "logcat", "true")
            //Sinya -是否要捕抓错误信息提交到后台
            resValue("string", "catchlog", "true")
        }

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    // or 1.4-beta1
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'jp.wasabeef:recyclerview-animators:2.2.0'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.nineoldandroids:library:2.4.0'
}
